name: Package Release

on:
  release:
    types: [ published ]

jobs:
  release:
    name: Publish to official pypi
    runs-on: ${{ matrix.os }}
    if: ${{ github.repository == 'hansbug/fake_html' }}
    strategy:
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.8'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
          submodules: 'recursive'
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install chrome stable
        shell: bash
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends google-chrome-stable unzip
      - name: Install chrome driver
        shell: bash
        run: |
          wget -qO /tmp/chromedriver.zip "http://chromedriver.storage.googleapis.com/$(wget -qO- chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip"
          sudo unzip -qq /tmp/chromedriver.zip chromedriver -d /usr/local/bin/
          chromedriver --help
          chromedriver --version
      - name: Set up python dependences
        run: |
          pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
          pip install -r requirements-crawl.txt
          pip install --upgrade build
      - name: Build packages
        run: |
          make dataset
          python -m build --sdist --wheel --outdir dist/
      - name: Publish distribution ðŸ“¦ to real PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
